# Logstash Pipeline Configuration
input {
  beats {
    port => 5044
  }
}

filter {
  # Parse Docker container logs
  if [container][name] {
    mutate {
      add_field => { "service_name" => "%{[container][name]}" }
    }
  }

  # Parse Semaphore specific logs
  if [container][name] == "semaphore" {
    grok {
      match => { 
        "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] %{LOGLEVEL:level} %{GREEDYDATA:log_message}"
      }
    }
    
    # Parse task logs
    if [log][file][path] =~ /tasks\.log/ {
      mutate {
        add_field => { "log_type" => "semaphore_task" }
      }
    }
    
    # Parse event logs
    if [log][file][path] =~ /events\.log/ {
      mutate {
        add_field => { "log_type" => "semaphore_event" }
      }
    }
  }

  # Parse MySQL logs
  if [container][name] == "mysql" {
    grok {
      match => { 
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{NUMBER:thread_id} \[%{DATA:level}\] %{GREEDYDATA:log_message}"
      }
    }
    mutate {
      add_field => { "log_type" => "mysql" }
    }
  }

  # Parse Elasticsearch logs
  if [container][name] == "elasticsearch" {
    grok {
      match => { 
        "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\]\[%{LOGLEVEL:level}\s*\]\[%{DATA:component}\] %{GREEDYDATA:log_message}"
      }
    }
    mutate {
      add_field => { "log_type" => "elasticsearch" }
    }
  }

  # Parse Kibana logs
  if [container][name] == "kibana" {
    json {
      source => "message"
    }
    mutate {
      add_field => { "log_type" => "kibana" }
    }
  }

  # Add common fields
  mutate {
    add_field => { "environment" => "development" }
    add_field => { "project" => "semaphore-elk" }
  }

  # Clean up fields
  mutate {
    remove_field => ["agent", "ecs", "host", "input"]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "semaphore-logs-%{+YYYY.MM.dd}"
    template_name => "semaphore-logs"
    template => {
      "index_patterns" => ["semaphore-logs-*"],
      "settings" => {
        "number_of_shards" => 1,
        "number_of_replicas" => 0
      },
      "mappings" => {
        "properties" => {
          "@timestamp" => { "type" => "date" },
          "message" => { "type" => "text" },
          "level" => { "type" => "keyword" },
          "service_name" => { "type" => "keyword" },
          "log_type" => { "type" => "keyword" },
          "container" => {
            "properties" => {
              "name" => { "type" => "keyword" },
              "id" => { "type" => "keyword" }
            }
          }
        }
      }
    }
  }
  
  # Debug output
  stdout {
    codec => rubydebug
  }
}
